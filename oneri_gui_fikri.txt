Her veri frame'i bir tren vagonu gibi düşünülür.
Gönderici istasyonundan yola çıkan her vagon, alıcı istasyonuna ulaşmaya çalışır.
Ray hattında şu durumlar olabilir:

🚧 Raydan çıkar (Frame kaybolur)

⚠️ Vagonda hasar olur (Frame bozulur)

🚦 Sinyal yok (ACK gelmez)

🚃 Başarıyla ulaşır (Alıcıya varır)

🎨 Görsel Tasarım:
Ray hattı: gönderici ve alıcıyı bağlayan yatay bir yol

Vagonlar: her biri bir frame'i temsil eder (içinde frame ID, CRC vs. yazabilir)

Durumlar:

Vagon kaybolursa: raydan aşağı düşer animasyonu

Bozulursa: vagona ⚠️ ikon çıkar, kırmızı yanıp söner

Başarılıysa: yeşil yanıp söner ve ACK simgeli tren geri döner

🔧 Teknik Uygulama (Qt veya SFML ile yapılabilir)
Her frame için bir QGraphicsItem kullan

QPropertyAnimation ile ileri ve geri hareket ettir

Animasyon sırasında rastgele olaylar oluştur (kaybolma, bozulma vs.)

GUI’de aşağıda bir log paneli ekle:
“Frame 3 raydan çıktı”, “Frame 5 ulaştı, ACK döndü” gibi

🔁 Ekstra Özellikler
1. “Frame Takip Kamerası”
Her frame’e özel bir pencere/tooltip açılır.

Orada frame’in tüm süreci yazılır:

diff
Kopyala
Düzenle
Frame 2:
- Gönderildi
- Bozuldu
- Tekrar gönderildi
- Başarıyla ulaştı
- ACK geldi
2. Yüzdelik hata kontrol paneli
GUI'de yanda istatistik göster:

yaml
Kopyala
Düzenle
📊 Simülasyon Özeti:
✔ Başarıyla ulaştırılan: 8/10
❌ Kaybolan: 1
⚠️ Bozulan: 1
🔁 Tekrar gönderilen: 2
3. Ses Efektleri (Opsiyonel ama etkileyici)
Frame ulaştığında: ✅ ding!

Bozulduğunda: ⚠️ error sound

ACK geldiğinde: 📥

🎯 Neden Etkiler?
Gerçek dünya benzetmesi (tren – iletişim)

Dinamik animasyonlar

Öğrencinin süreci adım adım görmesi kolay

Hoca: “Bu çocuk konuya hâkim + sunumu çok yaratıcı” der

